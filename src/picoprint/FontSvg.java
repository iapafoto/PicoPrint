/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package picoprint;

import bezier.BezierPath;
import java.awt.geom.AffineTransform;
import java.awt.geom.Path2D;
import java.util.ArrayList;
import java.util.List;

/**
 *
 * @author durands
 */
public class FontSvg {

    String[] font1svg = {
        "M 6,-5 V 9 M 6,-2 4,-4 2,-5 h -3 l -2,1 -2,2 -1,3 v 2 l 1,3 2,2 2,1 H 2 L 4,8 6,6",
        "M -6,-12 V 9 m 0,-11 2,-2 2,-1 h 3 l 2,1 2,2 1,3 V 3 L 5,6 3,8 1,9 H -2 L -4,8 -6,6",
        "M 6,-2 4,-4 2,-5 h -3 l -2,1 -2,2 -1,3 v 2 l 1,3 2,2 2,1 H 2 L 4,8 6,6",
        "M 6,-12 V 9 M 6,-2 4,-4 2,-5 h -3 l -2,1 -2,2 -1,3 v 2 l 1,3 2,2 2,1 H 2 L 4,8 6,6",
        "M -6,1 H 6 V -1 L 5,-3 4,-4 2,-5 h -3 l -2,1 -2,2 -1,3 v 2 l 1,3 2,2 2,1 H 2 L 4,8 6,6",
        "M 5,-12 H 3 l -2,1 -1,3 V 9 M -3,-5 h 7",
        "M 6,-5 V 11 L 5,14 4,15 2,16 H -1 L -3,15 M 6,-2 4,-4 2,-5 h -3 l -2,1 -2,2 -1,3 v 2 l 1,3 2,2 2,1 H 2 L 4,8 6,6",
        "M -5,-12 V 9 m 0,-10 3,-3 2,-1 h 3 l 2,1 1,3 V 9",
        "m -1,-12 1,1 1,-1 -1,-1 -1,1 m 1,7 V 9",
        "m 0,-12 1,1 1,-1 -1,-1 -1,1 m 1,7 v 17 l -1,3 -2,1 h -2",
        "M -5,-12 V 9 M 5,-5 -5,5 m 4,-4 7,8",
        "M 0,-12 V 9",
        "M -11,-5 V 9 m 0,-10 3,-3 2,-1 h 3 l 2,1 1,3 V 9 M 0,-1 3,-4 5,-5 h 3 l 2,1 1,3 V 9",
        "M -5,-5 V 9 m 0,-10 3,-3 2,-1 h 3 l 2,1 1,3 V 9",
        "m -1,-5 -2,1 -2,2 -1,3 v 2 l 1,3 2,2 2,1 H 2 L 4,8 6,6 7,3 V 1 L 6,-2 4,-4 2,-5 h -3",
        "m -6,-5 v 21 m 0,-18 2,-2 2,-1 h 3 l 2,1 2,2 1,3 V 3 L 5,6 3,8 1,9 H -2 L -4,8 -6,6",
        "M 6,-5 V 16 M 6,-2 4,-4 2,-5 h -3 l -2,1 -2,2 -1,3 v 2 l 1,3 2,2 2,1 H 2 L 4,8 6,6",
        "M -3,-5 V 9 m 0,-8 1,-3 2,-2 2,-1 h 3",
        "M 6,-2 5,-4 2,-5 h -3 l -3,1 -1,2 1,2 2,1 5,1 2,1 1,2 V 6 L 5,8 2,9 H -1 L -4,8 -5,6",
        "M 0,-12 V 5 L 1,8 3,9 H 5 M -3,-5 h 7",
        "M -5,-5 V 5 l 1,3 2,1 H 1 L 3,8 6,5 M 6,-5 V 9",
        "M -6,-5 0,9 M 6,-5 0,9",
        "M -8,-5 -4,9 M 0,-5 -4,9 M 0,-5 4,9 M 8,-5 4,9",
        "M -5,-5 6,9 M 6,-5 -5,9",
        "M -6,-5 0,9 M 6,-5 0,9 l -2,4 -2,2 -2,1 h -1",
        "M 6,-5 -5,9 M -5,-5 H 6 M -5,9 H 6",
        "M 0,-12 -8,9 M 0,-12 8,9 M -5,2 H 5",
        "M -7,-12 V 9 m 0,-21 h 9 l 3,1 1,1 1,2 v 2 l -1,2 -1,1 -3,1 m -9,0 h 9 l 3,1 1,1 1,2 V 5 L 6,7 5,8 2,9 h -9",
        "M 8,-7 7,-9 5,-11 3,-12 h -4 l -2,1 -2,2 -1,2 -1,3 v 5 l 1,3 1,2 2,2 2,1 H 3 L 5,8 7,6 8,4",
        "M -7,-12 V 9 m 0,-21 h 7 l 3,1 2,2 1,2 1,3 V 1 L 6,4 5,6 3,8 0,9 h -7",
        "M -6,-12 V 9 m 0,-21 H 7 M -6,-2 H 2 M -6,9 H 7",
        "M -6,-12 V 9 m 0,-21 H 7 M -6,-2 h 8",
        "M 8,-7 7,-9 5,-11 3,-12 h -4 l -2,1 -2,2 -1,2 -1,3 v 5 l 1,3 1,2 2,2 2,1 H 3 L 5,8 7,6 8,4 V 1 M 3,1 h 5",
        "M -7,-12 V 9 M 7,-12 V 9 M -7,-2 H 7",
        "M 0,-12 V 9",
        "M 4,-12 V 4 L 3,7 2,8 0,9 H -2 L -4,8 -5,7 -6,4 V 2",
        "M -7,-12 V 9 M 7,-12 -7,2 m 5,-5 9,12",
        "M -6,-12 V 9 m 0,0 H 6",
        "M -8,-12 V 9 M -8,-12 0,9 M 8,-12 0,9 M 8,-12 V 9",
        "M -7,-12 V 9 M -7,-12 7,9 M 7,-12 V 9",
        "m -2,-12 -2,1 -2,2 -1,2 -1,3 v 5 l 1,3 1,2 2,2 2,1 H 2 L 4,8 6,6 7,4 8,1 V -4 L 7,-7 6,-9 4,-11 2,-12 h -4",
        "M -7,-12 V 9 m 0,-21 h 9 l 3,1 1,1 1,2 v 3 l -1,2 -1,1 -3,1 h -9",
        "m -2,-12 -2,1 -2,2 -1,2 -1,3 v 5 l 1,3 1,2 2,2 2,1 H 2 L 4,8 6,6 7,4 8,1 V -4 L 7,-7 6,-9 4,-11 2,-12 h -4 m 3,17 6,6",
        "M -7,-12 V 9 m 0,-21 h 9 l 3,1 1,1 1,2 v 2 l -1,2 -1,1 -3,1 h -9 m 7,0 7,11",
        "m 7,-9 -2,-2 -3,-1 h -4 l -3,1 -2,2 v 2 l 1,2 1,1 2,1 6,2 2,1 1,1 1,2 V 6 L 5,8 2,9 H -2 L -5,8 -7,6",
        "M 0,-12 V 9 M -7,-12 H 7",
        "M -7,-12 V 3 l 1,3 2,2 3,1 H 1 L 4,8 6,6 7,3 v -15",
        "M -8,-12 0,9 M 8,-12 0,9",
        "M -10,-12 -5,9 M 0,-12 -5,9 M 0,-12 5,9 M 10,-12 5,9",
        "M -7,-12 7,9 M 7,-12 -7,9",
        "M -8,-12 0,-2 V 9 M 8,-12 0,-2",
        "M 7,-12 -7,9 m 0,-21 H 7 M -7,9 H 7",
        "m -1,-12 -3,1 -2,3 -1,5 v 3 l 1,5 2,3 3,1 H 1 L 4,8 6,5 7,0 V -3 L 6,-8 4,-11 1,-12 h -2",
        "m -4,-8 2,-1 3,-3 V 9",
        "m -6,-7 v -1 l 1,-2 1,-1 2,-1 h 4 l 2,1 1,1 1,2 v 2 L 5,-4 3,-1 -7,9 H 7",
        "M -5,-12 H 6 l -6,8 h 3 l 2,1 1,1 1,3 V 3 L 6,6 4,8 1,9 H -2 L -5,8 -6,7 -7,5",
        "M 3,-12 -7,2 H 8 M 3,-12 V 9",
        "M 5,-12 H -5 l -1,9 1,-1 3,-1 h 3 l 3,1 2,2 1,3 V 3 L 6,6 4,8 1,9 H -2 L -5,8 -6,7 -7,5",
        "M 6,-9 5,-11 2,-12 H 0 l -3,1 -2,3 -1,5 v 5 l 1,4 2,2 3,1 H 1 L 4,8 6,6 7,3 V 2 L 6,-1 4,-3 1,-4 H 0 l -3,1 -2,2 -1,3",
        "M 7,-12 -3,9 M -7,-12 H 7",
        "m -2,-12 -3,1 -1,2 v 2 l 1,2 2,1 4,1 3,1 2,2 1,2 V 5 L 6,7 5,8 2,9 H -2 L -5,8 -6,7 -7,5 V 2 l 1,-2 2,-2 3,-1 4,-1 2,-1 1,-2 v -2 l -1,-2 -3,-1 h -4",
        "M 6,-5 5,-2 3,0 0,1 H -1 L -4,0 -6,-2 -7,-5 v -1 l 1,-3 2,-2 3,-1 h 1 l 3,1 2,2 1,4 V 0 L 5,5 3,8 0,9 H -2 L -5,8 -6,6"};

    String[] font2svg = {
        "M 3,3 2,1 0,0 h -2 l -2,1 -1,1 -1,2 v 2 l 1,2 2,1 h 2 L 1,8 2,6 4,0 3,5 V 8 L 4,9 H 5 L 7,8 8,7 10,4",
        "m -5,4 2,-3 3,-5 1,-2 1,-3 v -2 l -1,-1 -2,1 -1,2 -1,4 -1,7 v 6 l 1,1 h 1 L 0,8 2,6 3,3 V 0 L 4,4 5,5 H 7 L 9,4",
        "M 2,2 V 1 L 1,0 h -2 l -2,1 -1,1 -1,2 v 2 l 1,2 2,1 H 1 L 4,7 6,4",
        "M 3,3 2,1 0,0 h -2 l -2,1 -1,1 -1,2 v 2 l 1,2 2,1 h 2 L 1,8 2,6 8,-12 M 4,0 3,5 V 8 L 4,9 H 5 L 7,8 8,7 10,4",
        "M -3,7 -1,6 0,5 1,3 V 1 L 0,0 h -1 l -2,1 -1,2 v 3 l 1,2 2,1 H 1 L 3,8 4,7 6,4",
        "m -3,4 4,-5 2,-3 1,-2 1,-3 v -2 l -1,-1 -2,1 -1,2 -2,8 -3,9 -3,7 -1,3 v 2 l 1,1 2,-1 1,-3 1,-9 1,1 H 0 L 2,8 3,7 5,4",
        "M 3,3 2,1 0,0 h -2 l -2,1 -1,1 -1,2 v 2 l 1,2 2,1 h 2 L 1,8 2,7 M 4,0 2,7 -2,18 -3,20 -5,21 -6,20 V 18 L -5,15 -2,12 1,10 3,9 6,7 9,4",
        "m -5,4 2,-3 3,-5 1,-2 1,-3 v -2 l -1,-1 -2,1 -1,2 -1,4 -1,6 -1,8 M -5,9 -4,6 -3,4 -1,1 1,0 H 3 L 4,1 V 3 L 3,6 V 8 L 4,9 H 5 L 7,8 8,7 10,4",
        "m 1,-5 v 1 H 2 V -5 H 1 M -2,4 0,0 -2,6 v 2 l 1,1 H 0 L 2,8 3,7 5,4",
        "m 1,-5 v 1 H 2 V -5 H 1 m -3,9 2,-4 -6,18 -1,2 -2,1 -1,-1 v -2 l 1,-3 3,-3 3,-2 2,-1 3,-2 3,-3",
        "m -5,4 2,-3 3,-5 1,-2 1,-3 v -2 l -1,-1 -2,1 -1,2 -1,4 -1,6 -1,8 M -5,9 -4,6 -3,4 -1,1 1,0 H 3 L 4,1 V 3 L 2,4 h -3 m 0,0 2,1 1,3 1,1 H 4 L 6,8 7,7 9,4",
        "m -3,4 2,-3 3,-5 1,-2 1,-3 v -2 l -1,-1 -2,1 -1,2 -1,4 -1,7 v 6 l 1,1 H 0 L 2,8 3,7 5,4",
        "m -13,4 2,-3 2,-1 1,1 v 1 l -1,4 -1,3 m 1,-3 1,-2 2,-3 2,-1 h 2 l 1,1 V 2 L -2,6 -3,9 M -2,6 -1,4 1,1 3,0 H 5 L 6,1 V 3 L 5,6 V 8 L 6,9 H 7 L 9,8 10,7 12,4",
        "m -8,4 2,-3 2,-1 1,1 V 2 L -4,6 -5,9 M -4,6 -3,4 -1,1 1,0 H 3 L 4,1 V 3 L 3,6 V 8 L 4,9 H 5 L 7,8 8,7 10,4",
        "m 0,0 h -2 l -2,1 -1,1 -1,2 v 2 l 1,2 2,1 h 2 L 1,8 2,7 3,5 V 3 L 2,1 0,0 -1,1 V 3 L 0,5 2,6 H 5 L 7,5 8,4",
        "m -7,4 2,-3 1,-2 -1,4 -6,18 M -5,3 -4,1 -2,0 H 0 L 2,1 3,3 V 5 L 2,7 1,8 -1,9 M -5,8 -3,9 H 0 L 3,8 5,7 8,4",
        "M 3,3 2,1 0,0 h -2 l -2,1 -1,1 -1,2 v 2 l 1,2 2,1 h 2 L 1,8 M 4,0 3,3 1,8 l -3,7 -1,3 v 2 l 1,1 2,-1 1,-3 V 10 L 3,9 6,7 9,4",
        "m -5,4 2,-3 1,-2 V 1 H 1 L 2,2 V 4 L 1,7 V 8 L 2,9 H 3 L 5,8 6,7 8,4",
        "m -4,4 2,-3 1,-2 V 1 L 1,4 2,6 V 8 L 0,9 M -4,8 -2,9 H 2 L 4,8 5,7 7,4",
        "m -3,4 2,-3 2,-4 m 3,-9 -6,18 v 2 l 1,1 H 1 L 3,8 4,7 6,4 m -8,-8 h 7",
        "m -6,4 2,-4 -2,6 v 2 l 1,1 h 2 L -1,8 1,6 3,3 M 4,0 2,6 V 8 L 3,9 H 4 L 6,8 7,7 9,4",
        "m -6,4 2,-4 -1,5 v 3 l 1,1 h 1 L 0,8 2,6 3,3 V 0 M 3,0 4,4 5,5 H 7 L 9,4",
        "m -6,0 -2,2 -1,3 v 2 l 1,2 h 2 L -4,8 -2,6 M 0,0 -2,6 v 2 l 1,1 H 1 L 3,8 5,6 6,3 V 0 m 0,0 1,4 1,1 h 2 l 2,-1",
        "m -8,4 2,-3 2,-1 h 2 l 1,1 V 8 L 0,9 H 3 L 6,7 8,4 M 5,1 4,0 H 2 L 1,1 -3,8 -4,9 H -6 L -7,8",
        "m -6,4 2,-4 -2,6 v 2 l 1,1 h 2 L -1,8 1,6 3,3 m 1,-3 -6,18 -1,2 -2,1 -1,-1 V 18 L -5,15 -2,12 1,10 3,9 6,7 9,4",
        "m -6,4 2,-3 2,-1 h 2 l 2,2 v 2 l -1,2 -2,2 -3,1 2,1 1,2 v 3 l -1,3 -1,2 -2,1 -1,-1 v -2 l 1,-3 3,-3 3,-2 4,-3 3,-3",
        "m -11,9 2,-1 3,-3 3,-4 4,-7 3,-6 V 9 L 3,6 1,3 -1,1 -4,-1 h -2 l -1,1 v 2 l 1,2 2,2 3,2 3,1 h 5",
        "m 1,-10 1,1 v 3 L 1,-2 0,1 -1,3 -3,6 -5,8 -7,9 H -8 L -9,8 V 5 l 1,-5 1,-3 1,-2 2,-3 2,-2 2,-1 3,-1 h 3 l 2,1 1,2 v 2 l -1,2 -1,1 -2,1 -3,1 m -1,0 h 1 l 3,1 1,1 1,2 V 5 L 6,7 5,8 3,9 H 0 L -2,8 -3,6",
        "m 2,-6 v 1 l 1,1 H 5 L 7,-5 8,-7 V -9 L 7,-11 5,-12 H 2 l -3,1 -2,2 -2,3 -1,2 -1,4 v 4 l 1,3 1,1 2,1 h 2 L 2,8 4,6 5,4",
        "m 2,-12 -2,1 -1,2 -1,4 -1,6 -1,3 -1,2 -2,2 -2,1 h -2 L -12,8 V 6 l 1,-1 h 2 l 2,1 2,2 3,1 H 1 L 4,8 6,6 8,2 9,-3 V -7 L 8,-10 7,-11 5,-12 H 2 l -2,2 v 2 l 1,3 2,3 2,2 3,2 2,1",
        "m 4,-8 v 1 l 1,1 H 7 L 8,-7 V -9 L 7,-11 4,-12 H 0 l -3,1 -1,2 v 3 l 1,2 1,1 3,1 h -3 l -3,1 -1,1 -1,2 v 3 l 1,2 1,1 3,1 H 1 L 4,8 6,6 7,4",
        "m 0,-6 h -2 l -2,-1 -1,-2 1,-2 3,-1 h 3 l 4,1 h 3 l 2,-1 M 6,-11 4,-4 2,2 0,6 -2,8 -4,9 H -6 L -8,8 -9,6 V 4 l 1,-1 h 2 l 2,1 m 3,-6 h 9",
        "m -11,9 2,-1 4,-4 3,-5 1,-3 1,-4 v -3 l -1,-1 h -1 l -1,1 -1,2 v 3 l 1,2 2,1 h 4 l 3,-1 1,-1 1,-2 v 6 L 7,4 6,6 4,8 1,9 H -3 L -6,8 -8,6 -9,4 V 2",
        "m -5,-5 -2,-1 -1,-2 v -1 l 1,-2 2,-1 h 1 l 2,1 1,2 v 2 l -1,4 -2,6 -2,4 -2,2 h -2 L -11,8 V 6 m 6,-6 9,-3 2,-1 3,-2 2,-2 1,-2 v -1 l -1,-1 H 10 L 8,-10 6,-6 4,0 3,5 V 8 L 4,9 H 5 L 7,8 8,7 10,4",
        "M 5,4 3,2 1,-1 0,-3 -1,-6 v -3 l 1,-2 1,-1 h 2 l 1,1 1,2 v 3 L 4,-1 2,4 1,6 -1,8 -3,9 H -5 L -7,8 -8,6 V 4 l 1,-1 h 2 l 2,1",
        "M 2,12 0,9 -2,4 -3,-2 v -6 l 1,-3 2,-1 h 2 l 1,1 1,3 v 3 l -1,5 -3,9 -2,6 -1,3 -1,2 -2,1 -1,-1 v -2 l 1,-3 2,-3 2,-2 3,-2 4,-2",
        "m -5,-5 -2,-1 -1,-2 v -1 l 1,-2 2,-1 h 1 l 2,1 1,2 v 2 l -1,4 -2,6 -2,4 -2,2 h -2 L -11,8 V 6 M 12,-9 v -2 l -1,-1 h -1 l -2,1 -2,2 -2,3 -2,2 -2,1 h -2 m 2,0 1,2 V 6 L 2,8 3,9 H 4 L 6,8 7,7 9,4",
        "m -5,0 h 2 l 4,-1 3,-2 2,-2 1,-2 v -3 L 6,-12 H 4 L 3,-11 2,-9 1,-4 0,1 -1,4 -2,6 -4,8 -6,9 H -8 L -9,8 V 6 l 1,-1 h 2 l 2,1 3,2 3,1 H 4 L 7,8 9,6",
        "m -13,-5 -2,-1 -1,-2 v -1 l 1,-2 2,-1 h 1 l 2,1 1,2 v 2 l -1,5 -1,4 -2,7 m 2,-7 3,-8 2,-4 1,-1 2,-1 h 1 l 2,1 1,2 v 2 l -1,5 -1,4 -2,7 m 2,-7 3,-8 2,-4 1,-1 2,-1 h 1 l 2,1 1,2 v 2 l -1,5 -2,7 v 3 l 1,1 h 1 l 2,-1 1,-1 2,-3",
        "m -8,-5 -2,-1 -1,-2 v -1 l 1,-2 2,-1 h 1 l 2,1 1,2 v 2 l -1,5 -1,4 -2,7 m 2,-7 3,-8 2,-4 1,-1 2,-1 h 2 l 2,1 1,2 v 2 L 6,-2 4,5 V 8 L 5,9 H 6 L 8,8 9,7 11,4",
        "m 2,-12 -3,1 -2,2 -2,3 -1,2 -1,4 v 4 l 1,3 1,1 2,1 h 2 L 2,8 4,6 6,3 7,1 8,-3 V -7 L 7,-10 6,-11 4,-12 H 2 l -2,2 v 3 l 1,3 2,3 2,2 3,2 2,1",
        "m 1,-10 1,1 v 3 L 1,-2 0,1 -1,3 -3,6 -5,8 -7,9 H -8 L -9,8 V 5 l 1,-5 1,-3 1,-2 2,-3 2,-2 2,-1 3,-1 h 5 l 2,1 1,1 1,2 v 3 l -1,2 -1,1 -2,1 H 5 L 3,-2 2,-3",
        "m 3,-6 -1,2 -1,1 -2,1 h -2 l -1,-2 v -2 l 1,-3 2,-2 3,-1 h 3 l 2,1 1,2 v 4 L 7,-2 5,1 1,5 -2,7 -4,8 -7,9 H -9 L -10,8 V 6 l 1,-1 h 2 l 2,1 3,2 3,1 H 4 L 7,8 9,6",
        "m 1,-10 1,1 v 3 L 1,-2 0,1 -1,3 -3,6 -5,8 -7,9 H -8 L -9,8 V 5 l 1,-5 1,-3 1,-2 2,-3 2,-2 2,-1 3,-1 h 4 l 2,1 1,1 1,2 v 3 l -1,2 -1,1 -2,1 H 4 L 1,-2 2,-1 3,1 V 6 L 4,8 6,9 8,8 9,7 11,4",
        "m -10,9 2,-1 2,-2 3,-4 2,-3 2,-4 1,-3 v -3 L 1,-12 H 0 l -1,1 -1,2 v 2 l 1,2 2,2 3,2 2,2 1,2 V 5 L 6,7 5,8 2,9 H -2 L -5,8 -7,6 -8,4 V 2",
        "m 0,-6 h -2 l -2,-1 -1,-2 1,-2 3,-1 h 3 l 4,1 h 3 l 2,-1 M 6,-11 4,-4 2,2 0,6 -2,8 -4,9 H -6 L -8,8 -9,6 V 4 l 1,-1 h 2 l 2,1",
        "m -8,-5 -2,-1 -1,-2 v -1 l 1,-2 2,-1 h 1 l 2,1 1,2 v 2 l -1,4 -1,3 -1,4 v 2 l 1,2 2,1 h 2 L 0,8 1,7 3,3 6,-5 8,-12 M 6,-5 5,-1 4,5 V 8 L 5,9 H 6 L 8,8 9,7 11,4",
        "m -7,-5 -2,-1 -1,-2 v -1 l 1,-2 2,-1 h 1 l 2,1 1,2 v 2 l -1,4 -1,3 -1,4 v 3 l 1,2 h 2 L -1,8 2,5 4,2 6,-2 7,-5 8,-9 v -2 L 7,-12 H 6 l -1,1 -1,2 v 2 l 1,3 2,2 2,1",
        "m -10,-5 -2,-1 -1,-2 v -1 l 1,-2 2,-1 h 1 l 2,1 1,2 v 3 L -7,9 M 3,-12 -7,9 M 3,-12 1,9 m 14,-21 -2,1 -3,3 -3,4 -3,6 -3,7",
        "m -4,-6 h -2 l -1,-1 v -2 l 1,-2 2,-1 h 2 l 2,1 1,2 v 3 L -1,3 V 6 L 0,8 2,9 H 4 L 6,8 7,6 V 4 L 6,3 H 4 m 7,-12 v -2 l -1,-1 H 8 l -2,1 -2,2 -2,3 -4,9 -2,3 -2,2 -2,1 h -2 L -11,8 V 6",
        "m -7,-5 -2,-1 -1,-2 v -1 l 1,-2 2,-1 h 1 l 2,1 1,2 v 2 l -1,4 -1,3 -1,4 v 2 l 1,2 1,1 h 2 L 0,8 2,6 4,3 5,1 7,-5 m 2,-7 -2,7 -3,10 -2,6 -2,5 -2,4 -2,1 -1,-1 V 18 L -4,15 -2,12 1,9 4,7 9,4",
        "m 3,-6 -1,2 -1,1 -2,1 h -2 l -1,-2 v -2 l 1,-3 2,-2 3,-1 h 3 l 2,1 1,2 v 4 L 7,-2 5,2 2,5 -2,8 -4,9 H -7 L -8,8 V 6 l 1,-1 h 3 l 2,1 1,1 1,2 v 3 l -1,3 -1,2 -2,3 -2,1 -1,-1 v -2 l 1,-3 2,-3 3,-3 3,-2 6,-3",
        "m -1,-12 -3,1 -2,3 -1,5 v 3 l 1,5 2,3 3,1 H 1 L 4,8 6,5 7,0 V -3 L 6,-8 4,-11 1,-12 h -2",
        "m -4,-8 2,-1 3,-3 V 9",
        "m -6,-7 v -1 l 1,-2 1,-1 2,-1 h 4 l 2,1 1,1 1,2 v 2 L 5,-4 3,-1 -7,9 H 7",
        "M -5,-12 H 6 l -6,8 h 3 l 2,1 1,1 1,3 V 3 L 6,6 4,8 1,9 H -2 L -5,8 -6,7 -7,5",
        "M 3,-12 -7,2 H 8 M 3,-12 V 9",
        "M 5,-12 H -5 l -1,9 1,-1 3,-1 h 3 l 3,1 2,2 1,3 V 3 L 6,6 4,8 1,9 H -2 L -5,8 -6,7 -7,5",
        "M 6,-9 5,-11 2,-12 H 0 l -3,1 -2,3 -1,5 v 5 l 1,4 2,2 3,1 H 1 L 4,8 6,6 7,3 V 2 L 6,-1 4,-3 1,-4 H 0 l -3,1 -2,2 -1,3",
        "M 7,-12 -3,9 M -7,-12 H 7",
        "m -2,-12 -3,1 -1,2 v 2 l 1,2 2,1 4,1 3,1 2,2 1,2 V 5 L 6,7 5,8 2,9 H -2 L -5,8 -6,7 -7,5 V 2 l 1,-2 2,-2 3,-1 4,-1 2,-1 1,-2 v -2 l -1,-2 -3,-1 h -4",
        "M 6,-5 5,-2 3,0 0,1 H -1 L -4,0 -6,-2 -7,-5 v -1 l 1,-3 2,-2 3,-1 h 1 l 3,1 2,2 1,4 V 0 L 5,5 3,8 0,9 H -2 L -5,8 -6,6"
    };
    
    List<Path2D> font1Path = svgToPath(font1svg);
    List<Path2D> font2Path = svgToPath(font2svg);
    
    static List<Path2D> svgToPath(String[] chars) {      
        List<Path2D> font2Path = new ArrayList(chars.length);
        for (String svg : chars) {
            font2Path.add(BezierPath.parsePathString(svg));
        }
        return font2Path;
    }
    
    static Path2D getPathForChar(List<Path2D> font, char c) {
        if (c>=48 && c<=57) {
            return font.get(52+c-48);
        } else if (c>=65 && c<=90) {
            return font.get(27+c-65);
        } else if (c>=97 && c<=122) {
            return font.get(c-97);
        }
        return null;
    }
    
    static Path2D getPathForText(List<Path2D> font, String txt) {
        char c;
        double x=0, y=0;
        double charSpace = font.get(0).getBounds2D().getWidth();
        double lineSpace = font.get(0).getBounds2D().getHeight()*1.5;
        boolean isGlue = true;
        Path2D pchar, path = new Path2D.Double();
        AffineTransform af;
        
        for (int i=0; i<txt.length(); i++) {
            c = txt.charAt(i);
            if (c=='\n') {
                y += lineSpace;
                x = 0;
                isGlue = false;
            } else {
                pchar = getPathForChar(font, c);
                if (pchar != null) {
                    path.append(pchar.createTransformedShape(AffineTransform.getTranslateInstance(x, y)), isGlue);
                    isGlue = true;
                    x += pchar.getBounds2D().getWidth();
                } else {
                    isGlue = false;
                    x += charSpace;
                }
            }
        }
        return path;
    }
}
